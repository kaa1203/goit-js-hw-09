{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBAGnBI,EAAwBP,EAAxBI,MAAOI,EAAiBR,EAAjBK,KAAMI,EAAWT,EAAXM,OAsB3B,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUP,MAAAQ,IAGpBG,EAAO,CAAEJ,WAAUP,MAAAQ,G,GAEpBA,E,IAjC+BZ,EAA9BC,KAEHkB,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAEC,iBAIF,IAHA,IAAMC,EAAcb,EAAOc,MACvBC,EAAaC,SAASlB,EAAMgB,OAEvBG,EAAgB,EAAGA,GAAiBJ,EAAaI,IACxDhB,EAAcgB,EAAeF,GAC1BG,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUkB,EAAKD,EAALxB,MACjBN,EAAAgC,OAAOC,QAAQ,qBAAoCC,OAAfrB,EAAS,QAAYqB,OAANH,EAAM,M,IAE1DI,OAAM,SAAAL,G,IAAGjB,EAAQiB,EAARjB,SAAUuB,EAAKN,EAALxB,MAClBN,EAAAgC,OAAOK,QAAQ,oBAAmCH,OAAfrB,EAAS,QAAYqB,OAANE,EAAM,M,IAE5DV,GAAcC,SAASjB,EAAKe,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix/build/notiflix-notify-aio\";\n\nconst refs = {\n  form: document.querySelector(\".form\"),\n  delay: document.querySelector(\"input[name='delay']\"),\n  step: document.querySelector(\"input[name='step']\"),\n  amount: document.querySelector(\"input[name='amount']\"),\n}\n\nconst { form, delay, step, amount } = refs;\n\nform.addEventListener(\"submit\", onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const amountValue = amount.value;\n  let delayValue = parseInt(delay.value);\n\n  for (let positionValue = 1; positionValue <= amountValue; positionValue++) {\n    createPromise(positionValue, delayValue)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`)\n    })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`)\n      });\n    delayValue += parseInt(step.value);\n  }\n\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay3","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","amountValue","value","delayValue","parseInt","positionValue","then","param","delay1","Notify","success","concat","catch","delay2","failure"],"version":3,"file":"03-promises.86a59551.js.map"}